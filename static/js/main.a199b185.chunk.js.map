{"version":3,"sources":["Favorites.js","Main.js","App.js","serviceWorker.js","index.js","favorite.png"],"names":["Favorites","_this","this","react_default","a","createElement","className","props","favoritos","map","index","key","onClick","irFavorito","index_es","icon","eliminarFavorito","Component","Main","state","comic","maxData","tituloFavoritos","loading","lastComic","_callee","res","data","regenerator_default","wrap","_context","prev","next","axios","get","sent","num","setState","stop","getComic","_callee2","id","_context2","abrupt","concat","random","randomNumber","Math","floor","getFirstComic","getPrevComic","actuallComic","getNextComic","añadirFavorito","obtenerVeces","Object","toConsumableArray","obtenerFavorito","obtenerTituloFavorito","obtenerComicActual","obtenerTituloComicActual","title","e","filter","favorito","demoMethod","console","log","array","elemento","item","length","comicActual","revisaArray","sendData","dist_default","bgColor","spinnerColor","textColor","logoSrc","text","src_Favorites","src","img","alt","favorite","library","add","faStroopwafel","faTrashAlt","faArrowAltCircleLeft","faArrowAltCircleRight","faStepBackward","faStepForward","faRandom","App","link","src_Main","getData","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.a199b185.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass Favorites extends Component {\n  render() {\n    // console.log(favoritos, \" favoritos aaaaaaaaaaa\")\n    return (\n      <div className=\"Favoritos\">\n        <p>Favoritos</p>\n        <ul>\n\n          {this.props.favoritos.map((favoritos, index) =>\n            <div key={favoritos} className=\"favoritos-list\" onClick={() => { this.props.irFavorito(favoritos) }}>\n              <div className=\"favoritos-element\" >\n                <p >{favoritos} </p>\n                {/* <p >{this.props.tituloFavoritos[index]} </p> */}\n              </div>\n              <div className=\"favoritos-delete\">\n                <FontAwesomeIcon icon=\"trash-alt\"\n                  onClick={() => { this.props.eliminarFavorito(favoritos) }} />\n              </div>\n            </div>\n          )}\n        </ul>\n      </div >\n    )\n  }\n}\nexport default Favorites;","import React, { Component } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport Favorites from './Favorites.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport LoadingScreen from 'react-loading-screen';\nimport favorite from './favorite.png'\n\nclass Main extends Component {\n  state = {\n    comic: [],\n    maxData: 1,\n    favoritos: [],\n    tituloFavoritos: [],\n    loading: false\n  }\n  componentDidMount() {\n    this.lastComic()\n  }\n  componentDidUpdate() {\n    this.demoMethod()\n    this.obtenerVeces()\n    console.log(this.state.comic)\n  }\n\n  lastComic = async () => {\n    const res = await axios.get(\"https://xkcd.now.sh/?comic=latest\");\n    const data = await res.data\n    const maxData = data.num\n    this.setState({ maxData: maxData })\n    this.setState({ comic: data })\n  }\n  getComic = async (id) => {\n    if (id > this.state.maxData || id < 1) {\n      return;\n    }\n    this.setState({ loading: true })\n    const res = await axios.get(`https://xkcd.now.sh/?comic=${id}`);\n    const data = await res.data\n    this.setState({ comic: data })\n    this.setState({ loading: false })\n  }\n  random = () => {\n    const randomNumber = Math.floor(Math.random() * (this.state.maxData + 1))\n    this.getComic(randomNumber)\n  }\n  getFirstComic = () => {\n    this.getComic(1)\n  }\n  getPrevComic = () => {\n    const actuallComic = this.state.comic.num - 1;\n    this.getComic(actuallComic)\n  }\n  getNextComic = () => {\n    const actuallComic = this.state.comic.num + 1;\n    this.getComic(actuallComic)\n  }\n  revisaArray(array, elemento) {\n    return array.filter(item => item === elemento).length;\n  }\n  obtenerVeces() {\n    const comicActual = this.state.comic.num\n    let veces = this.revisaArray(this.state.favoritos, comicActual)\n    return veces\n  }\n  añadirFavorito = () => {\n    let veces = this.obtenerVeces()\n    if (veces < 1) {\n      this.setState({\n        favoritos: [...this.state.favoritos, this.obtenerFavorito()],\n        tituloFavoritos: [...this.state.tituloFavoritos, this.obtenerTituloFavorito()]\n      })\n    }\n  }\n  obtenerComicActual = () => {\n    const comicActual = this.state.comic.num\n    return comicActual\n  }\n  obtenerTituloComicActual = () => {\n    const tituloComicActual = this.state.comic.title\n    return tituloComicActual\n  }\n  obtenerFavorito = () => {\n    const favorito = this.obtenerComicActual()\n    return favorito\n  }\n  obtenerTituloFavorito = () => {\n    const tituloFavorito = this.obtenerTituloComicActual()\n    return tituloFavorito\n  }\n  eliminarFavorito = (e) => {\n    this.setState({\n      favoritos: this.state.favoritos.filter(favorito => favorito !== e)\n    })\n  }\n  irFavorito = (favorito) => {\n    this.getComic(favorito)\n  }\n  demoMethod() {\n    this.props.sendData(this.state.comic.num);\n  }\n\n\n  render() {\n    return (\n\n      <div className=\"Main\">\n        <LoadingScreen\n          loading={this.state.loading}\n          bgColor='#4f4e5c'\n          spinnerColor='#dedde9'\n          textColor='#dedde9'\n          logoSrc='https://i.imgur.com/tHDkeFo.gif'\n          text=' ¯\\_(ツ)_/¯ '>\n        </LoadingScreen>\n        <p className=\"Title\">{this.state.comic.title} ( {this.state.comic.num}  ) </p>\n        <div className=\"botones\">\n          <div className=\"button button_control\" onClick={this.getFirstComic} > <FontAwesomeIcon icon=\"step-backward\" /> </div>\n          <div className=\"button button_control\" onClick={this.getPrevComic} >  <FontAwesomeIcon icon=\"arrow-alt-circle-left\" /> </div>\n          <div className=\"button button_control\" onClick={this.random}> random   <FontAwesomeIcon icon=\"random\" /> </div>\n          <div className=\"button button_control\" onClick={this.getNextComic} > <FontAwesomeIcon icon=\"arrow-alt-circle-right\" />  </div>\n          <div className=\"button button_control\" onClick={this.lastComic}> <FontAwesomeIcon icon=\"step-forward\" />  </div>\n        </div>\n        <div className=\"comic_display\">\n          <div className=\"button button_favoritos\"  ><Favorites irFavorito={this.irFavorito} eliminarFavorito={this.eliminarFavorito} favoritos={this.state.favoritos} tituloFavoritos={this.state.tituloFavoritos} /></div>\n          <div className=\"image_display\">\n            <img src={this.state.comic.img} alt=\"\" className=\"comic_image\" />\n          </div>\n          <div className=\"button button_añadir-favoritos\" onClick={this.añadirFavorito}> <img alt=\"\" className=\"favorite\" src={favorite} ></img>  Añadir a favoritos</div>\n        </div>\n\n      </div >\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './Main.js';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faStroopwafel, faTrashAlt, faArrowAltCircleLeft, faArrowAltCircleRight, faStepBackward, faStepForward, faRandom } from '@fortawesome/free-solid-svg-icons'\nlibrary.add(faStroopwafel, faTrashAlt, faArrowAltCircleLeft, faArrowAltCircleRight, faStepBackward, faStepForward, faRandom)\nclass App extends Component {\n\n  getData(link) {\n    return link\n  }\n  render() {\n    return (\n      < div className=\"App\">\n        <Main sendData={this.getData} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/favorite.c9531487.png\";"],"sourceRoot":""}